let fps,currentMousePos,currentMouseEvent;const validEvents=["mousemove","click","hover","mouseover","mouseleave"];class Vector{constructor(t,s,i=0){this.x=t,this.y=s,this.mag=pythag(t,s),this.startAngle=radToDeg(atan2(s,t)),this.startX=t,this.startY=s,this.rotation=i}rotate(t){this.rotation+=t,this.#setRotation()}rotateTo(t){this.rotation=t,this.#setRotation()}#setRotation(){var t=this.rotation*(Math.PI/180);this.x=this.startX*Math.cos(t)-this.startY*Math.sin(t),this.y=this.startX*Math.sin(t)+this.startY*Math.cos(t)}draw(t,s=new Point(0,0),i="#000000",o=1,e=1){t.beginPath(),t.strokeStyle=i,t.lineWidth=e,t.moveTo(s.x,s.y),t.lineTo(s.x+this.x*o,s.y+this.y*o),t.stroke(),t.closePath()}normalize(){0!=this.mag&&(this.x/=this.mag,this.startX/=this.mag,this.y/=this.mag,this.startY/=this.mag,this.mag=1)}multiply(t){this.x*=t,this.startX*=t,this.y*=t,this.startY*=t,this.mag*=t}multiplyX(t){this.x*=t,this.startX*=t,this.#updateMag()}multiplyY(t){this.y*=t,this.startY*=t,this.#updateMag()}divide(t){this.x/=t,this.startX/=t,this.y/=t,this.startY/=t,this.mag/=t}appendMag(t){0!=this.mag&&(t=this.mag+t,this.normalize(),this.multiply(t),this.mag=t)}appendX(t){this.x+=t,this.startX+=t,this.#updateMag()}appendY(t){this.y+=t,this.startY+=t,this.#updateMag()}setX(t){this.x=t,this.startX=t,this.#updateMag()}setY(t){this.y=t,this.startY=t,this.#updateMag()}#updateMag(){this.mag=pythag(this.x,this.y)}setMag(t){this.normalize(),this.multiply(t),this.mag=t}clone(){return new Vector(this.x,this.y,this.rotation)}format(){return`(${this.x}, ${this.y})`}}class SimulationElement{constructor(t,s=new Color(0,0,0)){this.pos=t,this.color=s,this.sim=null}setSimulationElement(t){this.sim=t}fill(t,s=0){const i=new Color(this.color.r,this.color.g,this.color.b),o=(t.r-this.color.r)/(s*fps),e=(t.g-this.color.g)/(s*fps),h=(t.b-this.color.b)/(s*fps);var n=()=>{this.color=t};return transitionValues(n,()=>{i.r+=o,i.g+=e,i.b+=h,this.color.r=i.r,this.color.g=i.g,this.color.b=i.b},n,s)}moveTo(t,s=0){const i=(t.x-this.pos.x)/(s*fps),o=(t.y-this.pos.y)/(s*fps);return transitionValues(()=>{this.pos=t},()=>{this.pos.x+=i,this.pos.y+=o},()=>{this.pos.x=t.x,this.pos.y=t.y},s)}move(t,s=0){const i=t.x/(s*fps),o=t.y/(s*fps),e=new Point(this.pos.x,this.pos.y);return transitionValues(()=>{this.pos.x+=t.x,this.pos.y+=t.y},()=>{this.pos.x+=i,this.pos.y+=o},()=>{this.pos.x=e.x+t.x,this.pos.y=e.y+t.y},s)}}class Color{constructor(t,s,i){this.r=t,this.g=s,this.b=i}#compToHex(t){t=Math.round(t).toString(16);return 1==t.length?"0"+t:t}toHex(){return"#"+this.#compToHex(this.r)+this.#compToHex(this.g)+this.#compToHex(this.b)}}class Point extends Vector{constructor(t,s){super(t,s)}clone(){return new Point(this.x,this.y)}add(t){var s=this.clone();return s.x+=t.x,s.y+=t.y,s}format(){return super.format()}}class SceneCollection extends SimulationElement{constructor(t=""){super(new Point(0,0),new Color(0,0,0)),this.name=t,this.scene=[],this.idObjs={}}add(t,s=null){t instanceof SimulationElement?(null!=this.sim&&t.setSimulationElement(this.sim),null!=s?this.idObjs[s]=t:this.scene.push(t)):console.warn("Invalid Element. Must be an instance of SimElement")}removeWithId(t){delete this.idObjs[t]}removeWithObject(t){for(const s of this.scene)if(s==t)return void this.scene.splice(this.scene.indexOf(s),1);for(const i of Object.keys(this.idObjs))if(this.idObjs[i]==t)return void delete this.idObjs[i]}setSimulationElement(t){this.sim=t;for(const s of this.scene)s.setSimulationElement(t)}draw(t){for(const s of this.scene)s.draw(t);for(const i of Object.values(this.idObjs))i.draw(t)}}class Line extends SimulationElement{constructor(t,s,i,o,e=0){super(t,o),this.start=t,this.end=s,this.rotation=e,this.#setVector(),this.thickness=i}clone(){return new Line(this.start,this.end,this.thickness,this.color,this.rotation)}setStart(t,s=0){const i=(t.x-this.start.x)/(s*fps),o=(t.y-this.start.y)/(s*fps);return transitionValues(()=>{this.start=t},()=>{this.start.x+=i,this.start.y+=o},()=>{this.start=t},s)}setEnd(t,s=0){const i=(t.x-this.end.x)/(s*fps),o=(t.y-this.end.y)/(s*fps);return transitionValues(()=>{this.end=t,this.#setVector()},()=>{this.end.x+=i,this.end.y+=o,this.#setVector()},()=>{this.end=t,this.#setVector()},s)}#setVector(){this.vec=new Vector(this.end.x-this.start.x,this.end.y-this.start.y),this.vec.rotateTo(this.rotation)}rotate(t,s=0){const i=t/(s*fps),o=this.rotation;return transitionValues(()=>{this.rotation+=t,this.vec.rotate(t)},()=>{this.rotation+=i,this.vec.rotate(i)},()=>{this.rotation=o+t},s)}rotateTo(t,s=0){const i=(t-this.rotation)/(s*fps);return transitionValues(()=>{this.rotation=t,this.vec.rotateTo(t)},()=>{this.rotation+=i,this.vec.rotateTo(this.rotation)},()=>{this.rotation=t,this.vec.rotateTo(t)},s)}moveTo(t,s=0){return this.setStart(t,s)}move(t,s=0){return this.moveTo(this.start.add(t),s)}draw(t){this.vec.draw(t,new Point(this.start.x,this.start.y),this.color.toHex(),1,this.thickness)}}class Circle extends SimulationElement{constructor(t,s,i){super(t,i),this.radius=s,this.hovering=!1,this.events=[]}clone(){return new Circle(this.pos,this.radius,this.color)}draw(t){t.beginPath(),t.fillStyle=this.color.toHex(),t.arc(this.pos.x,this.pos.y,this.radius,0,2*Math.PI,!1),t.fill(),t.closePath(),this.#checkEvents()}setRadius(t,s=0){const i=(t-this.radius)/(s*fps);return transitionValues(()=>{this.radius=t},()=>{this.radius+=i},()=>{this.radius=t},s)}scale(t,s=0){const i=(this.radius*t-this.radius)/(s*fps),o=this.radius*t;return transitionValues(()=>{this.radius=o},()=>{this.radius+=i},()=>{this.radius=o},s)}#checkEvents(){this.events.forEach(t=>{switch(t.name){case"mouseover":!this.hovering&&currentMousePos&&this.contains(currentMousePos)&&(this.hovering=!0,t.callback(currentMouseEvent));break;case"mouseleave":this.hovering&&currentMousePos&&!this.contains(currentMousePos)&&(this.hovering=!1,t.callback(currentMouseEvent))}})}on(t,i,s){validEvents.includes(t)?"mousemove"===t?this.sim.addEventListener("mousemove",t=>{var s=new Point(t.offsetX,t.offsetY);this.contains(s)&&i(t)}):"hover"===t?(this.on("mouseover",i),this.on("mouseleave",s)):"click"===t?this.sim.addEventListener("click",t=>{var s=new Point(t.clientX,t.clientY);this.contains(s)&&i(t)}):(s=new Event(t,i),this.events.push(s)):console.warn(`Invalid event: ${t}. Event must be one of `+validEvents.join(", "))}contains(t){return distance(t,this.pos)<this.radius}}class Polygon extends SimulationElement{constructor(t,s,i,o=0,e=new Point(0,0)){super(t,i),this.rawPoints=s,this.offsetPoint=e,this.offsetX=this.offsetPoint.x,this.offsetY=this.offsetPoint.y,this.points=s.map(t=>new Point(t.x+this.offsetX,t.y+this.offsetY)),this.rotation=o}setPoints(t){this.points=t.map(t=>new Point(t.x+this.offsetX,t.y+this.offsetY))}clone(){return new Polygon(this.pos,this.rawPoints,this.color,this.rotation,this.offsetPoint)}rotate(t){this.rotation+=t,this.#setRotation()}rotateTo(t){this.rotation=t,this.#setRotation()}#setRotation(){this.points=this.points.map(t=>(t.rotateTo(this.rotation),t))}draw(s){s.beginPath(),s.fillStyle=this.color.toHex(),s.moveTo(this.points[0].x+this.pos.x,this.points[0].y+this.pos.y);for(let t=1;t<this.points.length;t++)s.lineTo(this.points[t].x+this.pos.x,this.points[t].y+this.pos.y);s.fill(),s.closePath()}}class Event{constructor(t,s){this.name=t,this.callback=s}}class Square extends SimulationElement{constructor(t,s,i,o,e=new Point(0,0),h=0){super(t,o),this.width=s,this.height=i,this.rotation=h,this.showNodeVectors=!1,this.showCollisionVectors=!1,this.hovering=!1,this.events=[],this.updateOffsetPosition(e)}updateOffsetPosition(t){this.offsetX=t.x,this.offsetY=t.y,this.topLeft=new Vector(-this.width/2-this.offsetX,-this.height/2-this.offsetY),this.topRight=new Vector(this.width/2-this.offsetX,-this.height/2-this.offsetY),this.bottomLeft=new Vector(-this.width/2-this.offsetX,this.height/2-this.offsetY),this.bottomRight=new Vector(this.width/2-this.offsetX,this.height/2-this.offsetY),this.#setRotation()}setNodeVectors(t){this.showNodeVectors=t}setCollisionVectors(t){this.showCollisionVectors=t}#setRotation(){this.topLeft.rotateTo(this.rotation),this.topRight.rotateTo(this.rotation),this.bottomLeft.rotateTo(this.rotation),this.bottomRight.rotateTo(this.rotation)}rotate(t,s=0){const i=this.rotation,o=t/(s*fps);var e=()=>{this.rotation=i+t,this.#setRotation()};return transitionValues(e,()=>{this.rotation+=o,this.#setRotation()},e,s)}rotateTo(t,s=0){const i=(t-this.rotation)/(s*fps);var o=()=>{this.rotation=t,this.#setRotation()};return transitionValues(o,()=>{this.rotation+=i,this.#setRotation()},o,s)}draw(s){var t;s.beginPath(),s.fillStyle=this.color.toHex(),s.moveTo(this.pos.x+this.topLeft.x+this.offsetX,this.pos.y+this.topLeft.y+this.offsetY),s.lineTo(this.pos.x+this.topRight.x+this.offsetX,this.pos.y+this.topRight.y+this.offsetY),s.lineTo(this.pos.x+this.bottomRight.x+this.offsetX,this.pos.y+this.bottomRight.y+this.offsetY),s.lineTo(this.pos.x+this.bottomLeft.x+this.offsetX,this.pos.y+this.bottomLeft.y+this.offsetY),s.fill(),s.closePath(),this.showNodeVectors&&(this.topLeft.draw(s,new Point(this.pos.x+this.offsetX,this.pos.y+this.offsetY)),this.topRight.draw(s,new Point(this.pos.x+this.offsetX,this.pos.y+this.offsetY)),this.bottomLeft.draw(s,new Point(this.pos.x+this.offsetX,this.pos.y+this.offsetY)),this.bottomRight.draw(s,new Point(this.pos.x+this.offsetX,this.pos.y+this.offsetY))),this.showCollisionVectors&&(t=[this.v1,this.v2,this.v3,this.v4,this.v5]).some(t=>t)&&t.forEach(t=>t.draw(s,new Point(this.pos.x,this.pos.y),"#0000ff")),this.#checkEvents()}scale(t,s=0){const i=this.topRight.mag,o=this.topLeft.mag,e=this.bottomRight.mag,h=this.bottomLeft.mag,n=(i*t-i)/(s*fps),a=(o*t-o)/(s*fps),r=(e*t-e)/(s*fps),l=(h*t-h)/(s*fps);return transitionValues(()=>{this.topRight.multiply(t),this.topLeft.multiply(t),this.bottomRight.multiply(t),this.bottomLeft.multiply(t),this.#updateDimentions()},()=>{this.topRight.appendMag(n),this.topLeft.appendMag(a),this.bottomRight.appendMag(r),this.bottomLeft.appendMag(l)},()=>{this.topRight.normalize(),this.topRight.multiply(i*t),this.topLeft.normalize(),this.topLeft.multiply(o*t),this.bottomRight.normalize(),this.bottomRight.multiply(e*t),this.bottomLeft.normalize(),this.bottomLeft.multiply(h*t),this.#updateDimentions()},s)}#getInitialStartAndMag(){return{topRightClone:this.topRight.clone(),topLeftClone:this.topLeft.clone(),bottomLeftClone:this.bottomLeft.clone(),bottomRightClone:this.bottomRight.clone()}}#getProcessedStartAndMag(o){const e=this.#getInitialStartAndMag();var t=Object.keys(e).reduce((t,s,i)=>{t={...t};return t[s.replace("Clone","Mag")]=o?e[s][o]:s.mag,t},{});return{...e,...t}}scaleWidth(t,s=0){let{topRightClone:i,topLeftClone:o,bottomRightClone:e,bottomLeftClone:h,topRightMag:n,topLeftMag:a,bottomRightMag:r,bottomLeftMag:l}=this.#getProcessedStartAndMag("x");const c=(n*t-n)/(s*fps),p=(a*t-a)/(s*fps),f=(r*t-r)/(s*fps),u=(l*t-l)/(s*fps);return transitionValues(()=>{this.topRight.multiplyX(t),this.topLeft.multiplyX(t),this.bottomRight.multiplyX(t),this.bottomLeft.multiplyX(t),this.#updateDimentions()},()=>{this.topRight.appendX(c),this.topLeft.appendX(p),this.bottomRight.appendX(f),this.bottomLeft.appendX(u)},()=>{i.setX(1),i.multiplyX(n*t),this.topRight=i.clone(),o.setX(1),o.multiplyX(a*t),this.topLeft=o.clone(),e.setX(1),e.multiplyX(r*t),this.bottomRight=e.clone(),h.setX(1),h.multiplyX(l*t),this.bottomLeft=h.clone(),this.#updateDimentions()},s)}scaleHeight(t,s=0){let{topRightClone:i,topLeftClone:o,bottomLeftClone:e,bottomRightClone:h,topRightMag:n,topLeftMag:a,bottomRightMag:r,bottomLeftMag:l}=this.#getProcessedStartAndMag("y");const c=(n*t-n)/(s*fps),p=(a*t-a)/(s*fps),f=(r*t-r)/(s*fps),u=(l*t-l)/(s*fps);return transitionValues(()=>{this.topRight.multiplyY(t),this.topLeft.multiplyY(t),this.bottomRight.multiplyY(t),this.bottomLeft.multiplyY(t),this.#updateDimentions()},()=>{this.topRight.appendY(c),this.topLeft.appendY(p),this.bottomRight.appendY(f),this.bottomLeft.appendY(u)},()=>{i.setY(1),i.multiplyY(n*t),this.topRight=i.clone(),o.setY(1),o.multiplyY(a*t),this.topLeft=o.clone(),h.setY(1),h.multiplyY(r*t),this.bottomRight=h.clone(),e.setY(1),e.multiplyY(l*t),this.bottomLeft=e.clone(),this.#updateDimentions()},s)}setWidth(t,s=0){t/=this.width;return this.scaleWidth(t,s)}setHeight(t,s=0){t/=this.height;return this.scaleHeight(t,s)}contains(t){var s=new Vector(this.topLeft.x,this.topLeft.y),i=(s.rotateTo(-this.rotation),this.v1=s,new Vector(this.topRight.x,this.topRight.y)),o=(i.rotateTo(-this.rotation),this.v2=i,new Vector(this.bottomLeft.x,this.bottomLeft.y)),e=(o.rotateTo(-this.rotation),this.v3=o,new Vector(this.bottomRight.x,this.bottomRight.y)),e=(e.rotateTo(-this.rotation),this.v4=e,new Vector(t.x-this.pos.x-this.offsetX,t.y-this.pos.y-this.offsetY));return e.rotateTo(-this.rotation),(this.v5=e).x>o.x&&e.x<i.x&&e.y>s.y&&e.y<o.y}#updateDimentions(){this.height=this.topRight.y+this.bottomRight.y,this.width=this.topRight.x+this.topLeft.x}#checkEvents(){this.events.forEach(t=>{switch(t.name){case"mouseover":!this.hovering&&currentMousePos&&this.contains(currentMousePos)&&(this.hovering=!0,t.callback(currentMouseEvent));break;case"mouseleave":this.hovering&&currentMousePos&&!this.contains(currentMousePos)&&(this.hovering=!1,t.callback(currentMouseEvent))}})}on(t,i,s){validEvents.includes(t)?"mousemove"===t?this.sim.addEventListener("mousemove",t=>{var s=new Point(t.clientX,t.clientY);this.contains(s)&&i(t)}):"click"===t?this.sim.addEventListener("click",t=>{var s=new Point(t.clientX,t.clientY);this.contains(s)&&i(t)}):"hover"===t?(this.on("mouseover",i),this.on("mouseleave",s)):(s=new Event(t,i),this.events.push(s)):console.warn(`Invalid event: ${t}. Event must be one of `+validEvents.join(", "))}clone(){return new Square(this.pos,this.width,this.height,this.color,this.offsetPoint,rotation)}}class Simulation{constructor(t,s=60){fps=s,this.scene=[],this.idObjs={},this.fitting=!1,this.bgColor="#ffffff",this.canvas=document.getElementById(t),this.canvas?(this.canvas.addEventListener("mousemove",t=>{currentMousePos=new Point(t.offsetX,t.offsetY),currentMouseEvent=t}),window.addEventListener("resize",()=>this.#resizeCanvas(this.canvas)),this.#resizeCanvas(this.canvas),s=this.canvas.getContext("2d"),this.#render(s)):console.warn(`Canvas with id "${t}" not found`)}#render(s){setTimeout(()=>{s.clearRect(0,0,this.canvas.width,this.canvas.height),s.beginPath(),s.fillStyle=this.bgColor,s.fillRect(0,0,this.canvas.width,this.canvas.height),s.closePath();for(const t of this.scene)t.draw(s);Object.values(this.idObjs).forEach(t=>{t.draw(s)}),this.#render(s)},1e3/fps)}add(t,s=null){t instanceof SimulationElement?(t.setSimulationElement(this.canvas),null!==s?this.idObjs[s]=t:this.scene.push(t)):console.warn("Invalid Element. Must be an instance of SimElement")}removeWithId(t){void 0!==this.idObjs[t]&&delete this.idObjs[t]}removeWithObject(t){for(const s of this.scene)if(compare(s,t))return void this.scene.splice(this.scene.indexOf(s),1);for(const i of Object.keys(this.idObjs))compare(this.idObjs[i],t)&&delete this.idObjs[i]}on(t,s){this.canvas&&this.canvas.addEventListener(t,s)}fitElement(){this.canvas&&(this.fitting=!0,this.#resizeCanvas(this.canvas))}setSize(t,s){this.canvas&&(this.canvas.width=t,this.canvas.height=s,this.fitting=!1)}setBgColor(t){t instanceof Color?this.bgColor=t.toHex():console.warn("Invalid color. Must be an instance of Color object")}#resizeCanvas(t){this.canvas&&(this.fitting&&(t.width=t.parentElement.clientWidth,t.height=t.parentElement.clientHeight),this.width=this.canvas.width,this.height=this.canvas.height)}}function abs(t){return Math.abs(t)}function pythag(t,s){return Math.sqrt(Math.pow(t,2)+Math.pow(s,2))}function distance(t,s){return pythag(t.x-s.x,t.y-s.y)}function atan2(t,s){return Math.atan2(s,t)}function degToRad(t){return t*Math.PI/180}function radToDeg(t){return 180*t/Math.PI}function transitionValues(e,h,n,a){return new Promise((s,t)=>{if(0==a)e(),s();else{const i=a*fps;let t=0;const o=()=>{h(),t<i?(t++,window.requestAnimationFrame(o)):(n(),s())};window.requestAnimationFrame(o)}})}function compare(s,i){var t,o,e=[null,void 0];if(e.includes(s)||e.includes(i))return s===i;if(typeof s!=typeof i)return!1;if(Array.isArray(s)){for(let t=0;t<s.length;t++)if(!compare(s[t],i[t]))return!1;return!0}return"object"==typeof s?(e=(s,i,o)=>{for(let t=0;t<s.length;t++){if(typeof i[s[t]]!=typeof o[s[t]])return!1;if("object"==typeof i[s[t]])return compare(i[s[t]],o[s[t]]);if(i[s[t]]!==o[s[t]])return!1}return!0},o=Object.keys(s),t=Object.keys(i),o=e(o,s,i),e=e(t,s,i),!(!o||!e)):s===i}const toExport={Vector:Vector,SimulationElement:SimulationElement,Color:Color,Point:Point,SceneCollection:SceneCollection,Line:Line,Circle:Circle,Polygon:Polygon,Square:Square,Simulation:Simulation,abs:abs,pythag:pythag,distance:distance,atan2:atan2,degToRad:degToRad,radToDeg:radToDeg,transitionValues:transitionValues,compare:compare};module.exports=toExport;